{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/estherxin/Documents/chatty/src/pages/Chat.js\";\nimport React, { Component } from \"react\";\nimport Header from \"../components/Header\";\nimport { auth } from \"../services/firebase\";\nimport { db } from \"../services/firebase\";\nexport default class Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: auth().currentUser,\n      chats: [],\n      content: '',\n      readError: null,\n      writeError: null,\n      loadingChats: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.myRef = /*#__PURE__*/React.createRef();\n  }\n\n  async componentDidMount() {\n    this.setState({\n      readError: null,\n      loadingChats: true\n    });\n    const chatArea = this.myRef.current;\n\n    try {\n      db.ref(\"chats\").on(\"value\", snapshot => {\n        let chats = [];\n        snapshot.forEach(snap => {\n          chats.push(snap.val());\n        });\n        chats.sort(function (a, b) {\n          return a.timestamp - b.timestamp;\n        });\n        this.setState({\n          chats\n        });\n        chatArea.scrollBy(0, chatArea.scrollHeight);\n        this.setState({\n          loadingChats: false\n        });\n      });\n    } catch (error) {\n      this.setState({\n        readError: error.message,\n        loadingChats: false\n      });\n    }\n  }\n\n  handleChange(event) {\n    this.setState({\n      content: event.target.value\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      writeError: null\n    });\n    const chatArea = this.myRef.current;\n\n    try {\n      await db.ref(\"chats\").push({\n        content: this.state.content,\n        timestamp: Date.now(),\n        uid: this.state.user.uid\n      });\n      this.setState({\n        content: ''\n      });\n      chatArea.scrollBy(0, chatArea.scrollHeight);\n    } catch (error) {\n      this.setState({\n        writeError: error.message\n      });\n    }\n  }\n\n  formatTime(timestamp) {\n    const d = new Date(timestamp);\n    const time = `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()} ${d.getHours()}:${d.getMinutes()}`;\n    return time;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), \"\\u200B\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-area\",\n        ref: this.myRef,\n        children: [this.state.loadingChats ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-success\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sr-only\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 38\n        }, this) : \"\", this.state.chats.map(chat => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"chat-bubble \" + (this.state.user.uid === chat.uid ? \"current-user\" : \"\"),\n            children: [chat.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chat-time float-right\",\n              children: this.formatTime(chat.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, chat.timestamp, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 20\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"mx-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          name: \"content\",\n          onChange: this.handleChange,\n          value: this.state.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), this.state.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: this.state.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 31\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-submit px-5 mt-4\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"py-5 mx-3\",\n        children: [\"Login in as: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"text-info\",\n          children: this.state.user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/estherxin/Documents/chatty/src/pages/Chat.js"],"names":["React","Component","Header","auth","db","Chat","constructor","props","state","user","currentUser","chats","content","readError","writeError","loadingChats","handleChange","bind","handleSubmit","myRef","createRef","componentDidMount","setState","chatArea","current","ref","on","snapshot","forEach","snap","push","val","sort","a","b","timestamp","scrollBy","scrollHeight","error","message","event","target","value","preventDefault","Date","now","uid","formatTime","d","time","getDate","getMonth","getFullYear","getHours","getMinutes","render","map","chat","email"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"../components/Header\";\nimport { auth } from \"../services/firebase\";\nimport { db } from \"../services/firebase\";\n\nexport default class Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: auth().currentUser,\n      chats: [],\n      content: '',\n      readError: null,\n      writeError: null,\n      loadingChats: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.myRef = React.createRef();\n  }\n  \n  async componentDidMount() {\n    this.setState({ readError: null, loadingChats: true });\n    const chatArea = this.myRef.current;\n    try {\n      db.ref(\"chats\").on(\"value\", snapshot => {\n        let chats = [];\n        snapshot.forEach((snap) => {\n          chats.push(snap.val());\n        });\n        chats.sort(function (a, b) { return a.timestamp - b.timestamp })\n        this.setState({ chats });\n        chatArea.scrollBy(0, chatArea.scrollHeight);\n        this.setState({ loadingChats: false });\n      });\n    } catch (error) {\n      this.setState({ readError: error.message, loadingChats: false });\n    }\n  }\n  \n  handleChange(event) {\n    this.setState({\n      content: event.target.value\n    });\n  }\n  \n  async handleSubmit(event) {\n    event.preventDefault();\n    this.setState({ writeError: null });\n    const chatArea = this.myRef.current;\n    try {\n      await db.ref(\"chats\").push({\n        content: this.state.content,\n        timestamp: Date.now(),\n        uid: this.state.user.uid\n      });\n      this.setState({ content: '' });\n      chatArea.scrollBy(0, chatArea.scrollHeight);\n    } catch (error) {\n      this.setState({ writeError: error.message });\n    }\n  }\n  \n  formatTime(timestamp) {\n    const d = new Date(timestamp);\n    const time = `${d.getDate()}/${(d.getMonth()+1)}/${d.getFullYear()} ${d.getHours()}:${d.getMinutes()}`;\n    return time;\n  }\n  \n  render() {\n    return (\n      <div>\n        <Header />\n​\n        <div className=\"chat-area\" ref={this.myRef}>\n          {/* loading indicator */}\n          {this.state.loadingChats ? <div className=\"spinner-border text-success\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div> : \"\"}\n          {/* chat area */}\n          {this.state.chats.map(chat => {\n            return <p key={chat.timestamp} className={\"chat-bubble \" + (this.state.user.uid === chat.uid ? \"current-user\" : \"\")}>\n              {chat.content}\n              <br />\n              <span className=\"chat-time float-right\">{this.formatTime(chat.timestamp)}</span>\n            </p>\n          })}\n        </div>\n        <form onSubmit={this.handleSubmit} className=\"mx-3\">\n          <textarea className=\"form-control\" name=\"content\" onChange={this.handleChange} value={this.state.content}></textarea>\n          {this.state.error ? <p className=\"text-danger\">{this.state.error}</p> : null}\n          <button type=\"submit\" className=\"btn btn-submit px-5 mt-4\">Send</button>\n        </form>\n        <div className=\"py-5 mx-3\">\n          Login in as: <strong className=\"text-info\">{this.state.user.email}</strong>\n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}